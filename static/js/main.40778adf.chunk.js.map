{"version":3,"sources":["assets/images/image1.jpg","assets/images/image2.jpg","components/Slide.js","components/GoToSlide.js","components/Slider.js","components/RandomContent/Text.js","components/RandomContent/Video.js","config/contentSource.js","serviceWorker.js","index.js","components/App.js"],"names":["module","exports","Slide","slide","className","GoToSlide","active","handleClick","onClick","initialState","bufferCount","windowWidth","translateX","slideNr","slideWidth","sliderStyleModifier","clientX","clientXStart","slideCount","threshold","reducer","state","action","centerSlide","shiftSlide","newSlideNr","type","payload","Slider","slideData","useReducer","dispatch","useState","sliderContents","setSliderContents","sliderRef","useRef","dragAction","useCallback","e","touches","dragEnd","current","onmouseup","onmousemove","addEventListener","dragStart","window","event","preventDefault","useEffect","newSlideData","i","push","unshift","length","ref","onmousedown","updateSlideNr","setTimeout","setSliderWidth","innerWidth","handleWindowResize","removeEventListener","style","transform","width","map","key","_","Text","text","imgSrc","src","alt","Video","source","title","link","allow","allowFullScreen","text1","text2","video1","Boolean","location","hostname","match","ReactDOM","render","image2","image1","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.40778adf.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/image1.6773c5a2.jpg\";","module.exports = __webpack_public_path__ + \"static/media/image2.3de6d863.jpg\";","import React from \"react\";\r\n\r\nexport const Slide = ({ slide }) => {\r\n  return <div className=\"Slide\">{slide}</div>;\r\n};\r\n","import React from \"react\";\r\n\r\nexport const GoToSlide = ({ active, handleClick }) => {\r\n  return (\r\n    <div\r\n      onClick={() => handleClick()}\r\n      className={`GoToSlide ${active ? \"GoToSlide--active\" : \"\"}`}\r\n    />\r\n  );\r\n};\r\n","import React, {\r\n  useRef,\r\n  useEffect,\r\n  useReducer,\r\n  useCallback,\r\n  useState,\r\n} from \"react\";\r\nimport { Slide } from \"./Slide\";\r\nimport { GoToSlide } from \"./GoToSlide\";\r\n\r\nconst initialState = {\r\n  bufferCount: 1,\r\n  windowWidth: 0,\r\n  translateX: 0,\r\n  // chosen slider\r\n  slideNr: 1,\r\n  slideWidth: 0,\r\n  sliderStyleModifier: \"\",\r\n  // mouse / finger X position on screen\r\n  clientX: 0,\r\n  // first mouse / finger X position on screen\r\n  clientXStart: 0,\r\n  slideCount: 0,\r\n  // pixels that need to be moved to shift to a new slide\r\n  threshold: 0,\r\n};\r\n\r\nconst reducer = (state, action) => {\r\n  const centerSlide = (slideNr, slideWidth, windowWidth) => {\r\n    return -(slideNr * slideWidth - windowWidth / 2 + slideWidth / 2);\r\n  };\r\n\r\n  const shiftSlide = (newSlideNr) => {\r\n    return {\r\n      ...state,\r\n      slideNr: newSlideNr,\r\n      sliderStyleModifier: \"Slider__slides--transition\",\r\n      translateX: centerSlide(newSlideNr, state.slideWidth, state.windowWidth),\r\n    };\r\n  };\r\n\r\n  switch (action.type) {\r\n    case \"set-slider-width\":\r\n      return {\r\n        ...state,\r\n        slideWidth: action.payload.slideWidth,\r\n        threshold: action.payload.windowWidth / 10,\r\n        windowWidth: action.payload.windowWidth,\r\n        bufferCount: action.payload.bufferCount,\r\n        slideNr: action.payload.bufferCount,\r\n        translateX: centerSlide(\r\n          state.slideNr,\r\n          action.payload.slideWidth,\r\n          action.payload.windowWidth\r\n        ),\r\n      };\r\n    case \"set-slider-count\":\r\n      return {\r\n        ...state,\r\n        slideCount: action.payload,\r\n      };\r\n    case \"update-slide-nr\":\r\n      return {\r\n        ...state,\r\n        slideNr: action.payload,\r\n        sliderStyleModifier: \"\",\r\n        translateX: centerSlide(\r\n          action.payload,\r\n          state.slideWidth,\r\n          state.windowWidth\r\n        ),\r\n      };\r\n    case \"shift-slide\":\r\n      return shiftSlide(action.payload);\r\n    case \"drag-start\":\r\n      return {\r\n        ...state,\r\n        clientXStart: action.payload,\r\n        clientX: action.payload,\r\n        sliderStyleModifier: \"\",\r\n      };\r\n    case \"drag-action\":\r\n      return {\r\n        ...state,\r\n        clientX: action.payload,\r\n        translateX:\r\n          centerSlide(state.slideNr, state.slideWidth, state.windowWidth) -\r\n          state.clientXStart +\r\n          action.payload,\r\n      };\r\n    case \"drag-end\":\r\n      if (state.clientX - state.clientXStart > state.threshold) {\r\n        // go left\r\n        return shiftSlide(state.slideNr - 1);\r\n      } else if (state.clientXStart - state.clientX > state.threshold) {\r\n        // go right\r\n        return shiftSlide(state.slideNr + 1);\r\n      } else {\r\n        // stay\r\n        return shiftSlide(state.slideNr);\r\n      }\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport const Slider = ({ slideData }) => {\r\n  const [\r\n    {\r\n      sliderStyleModifier,\r\n      translateX,\r\n      slideNr,\r\n      slideCount,\r\n      slideWidth,\r\n      bufferCount,\r\n    },\r\n    dispatch,\r\n  ] = useReducer(reducer, initialState);\r\n  const [sliderContents, setSliderContents] = useState(slideData);\r\n  const sliderRef = useRef(null);\r\n\r\n  // DRAG EVENTS //\r\n  const dragAction = useCallback((e) => {\r\n    let clientX;\r\n\r\n    if (e.type === \"touchmove\") {\r\n      // handle touch on mobile devices\r\n      clientX = e.touches[0].clientX;\r\n    } else {\r\n      clientX = e.clientX;\r\n    }\r\n\r\n    dispatch({\r\n      type: \"drag-action\",\r\n      payload: clientX,\r\n    });\r\n  }, []);\r\n\r\n  const dragEnd = useCallback(() => {\r\n    dispatch({ type: \"drag-end\" });\r\n\r\n    sliderRef.current.onmouseup = null;\r\n    sliderRef.current.onmousemove = null;\r\n    sliderRef.current.addEventListener(\"touchmove\", null);\r\n    sliderRef.current.addEventListener(\"touchend\", null);\r\n  }, []);\r\n\r\n  const dragStart = useCallback(\r\n    (e) => {\r\n      e = e || window.event;\r\n      e.preventDefault();\r\n      let clientX;\r\n\r\n      if (e.type === \"touchstart\") {\r\n        // handle touch on mobile devices\r\n        sliderRef.current.addEventListener(\"touchmove\", dragAction);\r\n        sliderRef.current.addEventListener(\"touchend\", dragEnd);\r\n\r\n        clientX = e.touches[0].clientX;\r\n      } else {\r\n        sliderRef.current.onmousemove = dragAction;\r\n        sliderRef.current.onmouseup = dragEnd;\r\n\r\n        clientX = e.clientX;\r\n      }\r\n\r\n      dispatch({ type: \"drag-start\", payload: clientX });\r\n    },\r\n    [dragAction, dragEnd]\r\n  );\r\n  // DRAG EVENTS END //\r\n\r\n  // handle go to X slide\r\n  const handleClickOnGoToSlide = (index) => {\r\n    dispatch({ type: \"shift-slide\", payload: index });\r\n  };\r\n\r\n  // add items before first and after last slide on mount\r\n  useEffect(() => {\r\n    const newSlideData = [...slideData];\r\n\r\n    for (let i = 0; i < bufferCount; i++) {\r\n      newSlideData.push(slideData[i]);\r\n      newSlideData.unshift(newSlideData[slideData.length - 1]);\r\n    }\r\n\r\n    dispatch({ type: \"set-slider-count\", payload: newSlideData.length });\r\n    setSliderContents(newSlideData);\r\n  }, [slideData, bufferCount, slideNr]);\r\n\r\n  // add events\r\n  useEffect(() => {\r\n    const ref = sliderRef.current;\r\n\r\n    ref.onmousedown = dragStart;\r\n    // add event for mobile devices\r\n    ref.addEventListener(\"touchstart\", dragStart);\r\n\r\n    return () => {\r\n      // cleanup\r\n      ref.onmousedown = null;\r\n      ref.addEventListener(\"touchstart\", null);\r\n    };\r\n  }, [dragStart, dragAction, dragEnd]);\r\n\r\n  // check slider index to support infinity\r\n  useEffect(() => {\r\n    const updateSlideNr = (newSlideNr) => {\r\n      setTimeout(() => {\r\n        dispatch({\r\n          type: \"update-slide-nr\",\r\n          payload: newSlideNr,\r\n        });\r\n      }, 250);\r\n    };\r\n\r\n    if (slideNr + bufferCount === slideCount) {\r\n      // go to first slide\r\n      updateSlideNr(bufferCount);\r\n    } else if (slideNr === bufferCount - 1) {\r\n      // go to last slide\r\n      updateSlideNr(slideCount - bufferCount * 2 + bufferCount - 1);\r\n    }\r\n  }, [slideNr, slideCount, bufferCount]);\r\n\r\n  // listen for window resize, update slider width and slider threshold\r\n  useEffect(() => {\r\n    const getSlideWidth = () => {\r\n      if (window.innerWidth < 1025)\r\n        return {\r\n          windowWidth: window.innerWidth,\r\n          slideWidth: window.innerWidth,\r\n          bufferCount: 1,\r\n        };\r\n      if (window.innerWidth < 1367)\r\n        return {\r\n          windowWidth: window.innerWidth,\r\n          slideWidth: 450,\r\n          bufferCount: 3,\r\n        };\r\n      return {\r\n        windowWidth: window.innerWidth,\r\n        slideWidth: 650,\r\n        bufferCount: 3,\r\n      };\r\n    };\r\n\r\n    const setSliderWidth = () => {\r\n      dispatch({\r\n        type: \"set-slider-width\",\r\n        payload: getSlideWidth(),\r\n      });\r\n    };\r\n\r\n    const handleWindowResize = () => {\r\n      setTimeout(() => setSliderWidth(), 500);\r\n    };\r\n\r\n    // set parameters on mount\r\n    setSliderWidth();\r\n\r\n    window.addEventListener(\"resize\", handleWindowResize);\r\n    return () => {\r\n      window.removeEventListener(\"resize\", handleWindowResize);\r\n    };\r\n  }, [bufferCount]);\r\n\r\n  return (\r\n    <div className=\"Slider\">\r\n      {/* Slides */}\r\n      <div\r\n        ref={sliderRef}\r\n        className={\"Slider__slides \" + sliderStyleModifier}\r\n        style={{\r\n          transform: `translateX(${translateX}px)`,\r\n          width: slideCount * slideWidth,\r\n        }}\r\n      >\r\n        {sliderContents.map((slide, i) => (\r\n          <div\r\n            key={i}\r\n            style={{ width: slideWidth }}\r\n            className={`Slider__slide-wrapper ${\r\n              i === slideNr ? \"Slider__slide-wrapper--active\" : \"\"\r\n            }`}\r\n          >\r\n            <Slide slide={slide} />\r\n          </div>\r\n        ))}\r\n      </div>\r\n\r\n      {/* Slide navigator */}\r\n      <div className=\"Slider__go-to-slide-wrapper\">\r\n        {slideData.map((_, i) => {\r\n          const active = i + bufferCount === slideNr ? true : false;\r\n          return (\r\n            <div key={i}>\r\n              <GoToSlide\r\n                active={active}\r\n                handleClick={() => handleClickOnGoToSlide(i + bufferCount)}\r\n              />\r\n            </div>\r\n          );\r\n        })}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n","import React from \"react\";\n\nexport const Text = ({ text, imgSrc = false }) => {\n  return (\n    <div className=\"Text\">\n      {imgSrc ? <img src={imgSrc} alt=\"Scandiweb\" /> : \"\"}\n      <p>\n        <q>{text}</q>\n      </p>\n    </div>\n  );\n};\n","import React from \"react\";\n\nexport const Video = ({ source }) => {\n  return (\n    <div className=\"Video\">\n      <h1>{source.title}</h1>\n      <div className=\"Video__video-wrapper\">\n        <iframe\n          src={source.link}\n          allow=\"accelerometer; autoplay; encrypted-media; gyroscope; picture-in-picture\"\n          allowFullScreen\n          title=\"myFrame\"\n        ></iframe>\n      </div>\n    </div>\n  );\n};\n","export const text1 = `Agalychnis callidryas, known as the red-eyed treefrog, is an arboreal hylid native to Neotropical rainforests where it ranges from Mexico, through Central America, to Colombia. It is sometimes kept in captivity. The scientific name of the red-eyed treefrog, A. callidryas, comes from Greek words kalos (beautiful) and dryas (a tree or wood nymph).`;\n\nexport const text2 = `Cydalima perspectalis or the box tree moth is a species of moth of the family Crambidae. It is native to eastern Asia (Japan, China, Taiwan, Korea, the Russian Far East and India).[1] It is an invasive species in Europe, first recorded in Germany in 2006, and subsequently in Switzerland and the Netherlands in 2007`;\n\nexport const video1 = {\n  link: \"https://www.youtube.com/embed/LXb3EKWsInQ\",\n  title: \"Costa Rica\",\n};\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { App } from \"./components/App\";\nimport * as serviceWorker from \"./serviceWorker\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","import React from \"react\";\nimport \"./App.scss\";\nimport { Slider } from \"./Slider\";\nimport { Text } from \"./RandomContent/Text\";\nimport { Video } from \"./RandomContent/Video\";\n\nimport image1 from \"../assets/images/image1.jpg\";\nimport image2 from \"../assets/images/image2.jpg\";\nimport { text1, text2, video1 } from \"../config/contentSource\";\n\nexport const App = () => {\n  const slideData = [];\n\n  // populate slides\n  slideData.push(<Text text={text1} imgSrc={image2} />);\n  slideData.push(<Text text={text2} />);\n  slideData.push(<Video source={video1} />);\n  slideData.push(<Text text={text2} imgSrc={image1} />);\n  slideData.push(<Text text={text1} />);\n\n  return <Slider slideData={slideData} />;\n};\n"],"sourceRoot":""}